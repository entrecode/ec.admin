(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{109:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return b}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),s=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},m=function(e){var t=s(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),m=s(n),d=r,b=m["".concat(i,".").concat(d)]||m[d]||l[d]||o;return n?a.a.createElement(b,c(c({ref:t},p),{},{components:n})):a.a.createElement(b,c({ref:t},p))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=d;var c={};for(var u in t)hasOwnProperty.call(t,u)&&(c[u]=t[u]);c.originalType=e,c.mdxType="string"==typeof e?e:r,i[1]=c;for(var p=2;p<o;p++)i[p]=n[p];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},70:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return i})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return u})),n.d(t,"default",(function(){return s}));var r=n(3),a=n(7),o=(n(0),n(109)),i={id:"custom-form",title:"Custom Forms",slug:"/custom-form"},c={unversionedId:"custom-form",id:"custom-form",isDocsHomePage:!1,title:"Custom Forms",description:"Similar to lists, we can replace a generic EntryCreate / EntryEdit form with a custom Create / Edit View.",source:"@site/docs/custom-form.md",slug:"/custom-form",permalink:"/ec.admin/docs/custom-form",editUrl:"https://github.com/entrecode/ec.admin/edit/master/doc/docs/custom-form.md",version:"current",sidebar:"someSidebar",previous:{title:"Custom List",permalink:"/ec.admin/docs/custom-list"},next:{title:"FAQ",permalink:"/ec.admin/docs/faq"}},u=[{value:"Custom Edit",id:"custom-edit",children:[]},{value:"Custom Create",id:"custom-create",children:[]},{value:"Used APIs",id:"used-apis",children:[]}],p={rightToc:u};function s(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"Similar to lists, we can replace a generic EntryCreate / EntryEdit form with a custom ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/CreateEdit.html"}),"Create / Edit View"),"."),Object(o.b)("h2",{id:"custom-edit"},"Custom Edit"),Object(o.b)("p",null,"Here's an example of a custom edit component:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import React from 'react';\nimport { Edit, SimpleForm, Loading, TextInput } from 'react-admin';\nimport { useFields, inputProps, TypeInput } from 'ec.admin';\n\nexport function MuffinEdit(props) {\n  const { fieldConfig } = useFields(props.resource);\n  if (!fieldConfig) {\n    return <Loading />;\n  }\n  const input = (property) => inputProps(property, fieldConfig);\n  return (\n    <Edit {...props}>\n      <SimpleForm>\n        <TextInput {...input('name')} />\n        {/* equal to <TextInput source=\"name\" /> */}\n        <TypeInput {...input('amazement_factor')} />\n      </SimpleForm>\n    </Edit>\n  );\n}\n")),Object(o.b)("p",null,"To use it, we can override the edit prop on the target ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Resource.html"}),"Resource"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Resource name={'muffin'} {...entryCrud} edit={MuffinEdit} />\n")),Object(o.b)("h2",{id:"custom-create"},"Custom Create"),Object(o.b)("p",null,"Implementing a custom create form is similar to the above example:"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-js"}),"import React from 'react';\nimport { Create, SimpleForm, Loading, TextInput } from 'react-admin';\nimport { useFields, inputProps, TypeInput } from 'ec.admin';\n\nexport function MuffinCreate(props) {\n  const { fieldConfig } = useFields(props.resource, true);\n  if (!fieldConfig) {\n    return <Loading />;\n  }\n  const input = (property) => inputProps(property, fieldConfig, true);\n  return (\n    <Create {...props}>\n      <SimpleForm>\n        <TextInput {...input('name')} />\n        <TypeInput {...input('amazement_factor')} />\n      </SimpleForm>\n    </Create>\n  );\n}\n")),Object(o.b)("p",null,"To use it, we can override the create prop on the target ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Resource.html"}),"Resource"),":"),Object(o.b)("pre",null,Object(o.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<Resource name={'muffin'} {...entryCrud} create={MuffinCreate} />\n")),Object(o.b)("p",null,"The implementation is quite similar to a custom Edit. The differences are:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"./hooks#usefields"}),"useFields")," is used with excludeSystemFields true (omits id, created, modified, creator)."),Object(o.b)("li",{parentName:"ul"},"third param of inputProps is true (ignores readonly fields)"),Object(o.b)("li",{parentName:"ul"},"uses Create instead of Edit")),Object(o.b)("h2",{id:"used-apis"},"Used APIs"),Object(o.b)("p",null,"The examples use the following ec.admin APIs:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"./components#typeinput"}),"TypeInput")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"./helpers#inputprops"}),"inputProps")),Object(o.b)("li",{parentName:"ul"},Object(o.b)("a",Object(r.a)({parentName:"li"},{href:"./hooks#usefields"}),"useFields"))),Object(o.b)("p",null,'Note that the "name" field just uses a plain ',Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Inputs.html#textinput"}),"TextInput"),". When going that route, you have to make sure that the component can handle the field's value. The commented out version of it shows how the field would could be implemented without inputProps. If going that route, you have to check set props:"),Object(o.b)("ul",null,Object(o.b)("li",{parentName:"ul"},"source: field name (make sure it exists)"),Object(o.b)("li",{parentName:"ul"},"options.disabled should be true if the field is readOnly")),Object(o.b)("p",null,"Of course, the component that is used for a field can also be custom. For more info see ",Object(o.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Inputs.html#writing-your-own-input-component"}),"Writing Your Own Input Component"),"."))}s.isMDXComponent=!0}}]);