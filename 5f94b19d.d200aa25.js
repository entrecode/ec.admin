(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{104:function(e,t,r){"use strict";r.d(t,"a",(function(){return l})),r.d(t,"b",(function(){return m}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var d=a.a.createContext({}),u=function(e){var t=a.a.useContext(d),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=u(e.components);return a.a.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,d=c(e,["components","mdxType","originalType","parentName"]),l=u(r),b=n,m=l["".concat(s,".").concat(b)]||l[b]||p[b]||o;return r?a.a.createElement(m,i(i({ref:t},d),{},{components:r})):a.a.createElement(m,i({ref:t},d))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,s=new Array(o);s[0]=b;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var d=2;d<o;d++)s[d]=r[d];return a.a.createElement.apply(null,s)}return a.a.createElement.apply(null,r)}b.displayName="MDXCreateElement"},80:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return s})),r.d(t,"metadata",(function(){return i})),r.d(t,"rightToc",(function(){return c})),r.d(t,"default",(function(){return u}));var n=r(3),a=r(7),o=(r(0),r(104)),s={id:"hooks",title:"Hooks",slug:"/hooks"},i={unversionedId:"hooks",id:"hooks",isDocsHomePage:!1,title:"Hooks",description:"Provider Hooks",source:"@site/docs/hooks.md",slug:"/hooks",permalink:"/ec.admin/docs/hooks",editUrl:"https://github.com/entrecode/ec.admin/edit/master/doc/docs/hooks.md",version:"current",sidebar:"someSidebar",previous:{title:"Theming",permalink:"/ec.admin/docs/theming"},next:{title:"Entry CRUD",permalink:"/ec.admin/docs/entry-crud"}},c=[{value:"Provider Hooks",id:"provider-hooks",children:[{value:"useDatamanager",id:"usedatamanager",children:[]},{value:"useSession",id:"usesession",children:[]},{value:"Example",id:"example",children:[]}]},{value:"Helper Hooks",id:"helper-hooks",children:[{value:"useFields",id:"usefields",children:[]},{value:"useFieldConfig",id:"usefieldconfig",children:[]}]}],d={rightToc:c};function u(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},d,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h2",{id:"provider-hooks"},"Provider Hooks"),Object(o.b)("p",null,"Using hooks, you can obtain the following providers:"),Object(o.b)("h3",{id:"usedatamanager"},Object(o.b)("a",Object(n.a)({parentName:"h3"},{href:"https://github.com/entrecode/ec.admin/blob/master/src/hooks/useDatamanager.tsx"}),"useDatamanager")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"useDatamanager(datamanagerID, env?, ecUser?)\n")),Object(o.b)("p",null,"Returns ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Admin.html#dataprovider"}),"dataProvider")," that internally uses ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://entrecode.github.io/ec.sdk/#publicapi"}),"PublicAPI"),". See ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"./getting-started"}),"Getting Started")," for usage."),Object(o.b)("h3",{id:"usesession"},Object(o.b)("a",Object(n.a)({parentName:"h3"},{href:"https://github.com/entrecode/ec.admin/blob/master/src/hooks/useSession.tsx"}),"useSession")),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),"useSession(env?, clientID?)\n")),Object(o.b)("p",null,"Returns ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Admin.html#authprovider"}),"authProvider")," that internally uses ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://entrecode.github.io/ec.sdk/#session"}),"Session")," and ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://entrecode.github.io/ec.sdk/#accounts"}),"Accounts"),". See ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"./getting-started"}),"Getting Started")," for usage."),Object(o.b)("h3",{id:"example"},"Example"),Object(o.b)("p",null,"Typically, you would want to use the providers like this:"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"import React from 'react';\nimport { Admin, Resource, Loading } from 'react-admin';\nimport { useSession, useDatamanager, entryCrud } from 'ec.admin';\n\nconst App = () => {\n  const dataProvider = useDatamanager('73538731-4ac3-4a1a-b3b5-e31d09e94d42'); // datamanagerID\n  const authProvider = useSession();\n  if (!dataProvider || !authProvider) {\n    return <Loading />;\n  }\n  return (\n    <Admin dataProvider={dataProvider} authProvider={authProvider}>\n      {/* Resources */}\n    </Admin>\n  );\n};\nexport default App;\n")),Object(o.b)("h2",{id:"helper-hooks"},"Helper Hooks"),Object(o.b)("h3",{id:"usefields"},Object(o.b)("a",Object(n.a)({parentName:"h3"},{href:"https://github.com/entrecode/ec.admin/blob/master/src/hooks/useFields.tsx"}),"useFields")),Object(o.b)("p",null,'Returns fieldConfig for given model. Appends system fields "id", "',"_",'created" and "',"_",'modified" if second param is false. Intended to be used with fieldProps / inputProps or as fieldConfig prop of EntryListFilter.\nFor usage examples, see ',Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"./custom-form"}),"custom Form"),"."),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"const fields = useFields(props.resource); // fieldConfig with system fields\nconst fields = useFields(props.resource, false); // fieldConfig without system fields\n// fields contains { fieldConfig, defaultColumns }\n")),Object(o.b)("h3",{id:"usefieldconfig"},Object(o.b)("a",Object(n.a)({parentName:"h3"},{href:"https://github.com/entrecode/ec.admin/blob/master/src/hooks/useFields.tsx"}),"useFieldConfig")),Object(o.b)("p",null,"Returns just fieldConfig for given model. Does not add system fields or defaultColumns. Used by useFields."))}u.isMDXComponent=!0}}]);