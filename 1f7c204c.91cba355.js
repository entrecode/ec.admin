(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{104:function(e,t,n){"use strict";n.d(t,"a",(function(){return m})),n.d(t,"b",(function(){return u}));var r=n(0),a=n.n(r);function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?p(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):p(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},c=Object.keys(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(r=0;r<c.length;r++)n=c[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),d=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=d(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},b=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,c=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),m=d(n),b=r,u=m["".concat(p,".").concat(b)]||m[b]||s[b]||c;return n?a.a.createElement(u,i(i({ref:t},l),{},{components:n})):a.a.createElement(u,i({ref:t},l))}));function u(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var c=n.length,p=new Array(c);p[0]=b;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i.mdxType="string"==typeof e?e:r,p[1]=i;for(var l=2;l<c;l++)p[l]=n[l];return a.a.createElement.apply(null,p)}return a.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return p})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return d}));var r=n(3),a=n(7),c=(n(0),n(104)),p={id:"components",title:"Components",slug:"/components"},i={unversionedId:"components",id:"components",isDocsHomePage:!1,title:"Components",description:"Type Components",source:"@site/docs/components.md",slug:"/components",permalink:"/ec.admin/docs/components",editUrl:"https://github.com/entrecode/ec.admin/edit/master/doc/docs/components.md",version:"current",sidebar:"someSidebar",previous:{title:"Entry CRUD",permalink:"/ec.admin/docs/entry-crud"},next:{title:"Helpers",permalink:"/ec.admin/docs/helpers"}},o=[{value:"Type Components",id:"type-components",children:[{value:"TypeField",id:"typefield",children:[]},{value:"TypeInput",id:"typeinput",children:[]},{value:"TypeFilter",id:"typefilter",children:[]}]}],l={rightToc:o};function d(e){var t=e.components,n=Object(a.a)(e,["components"]);return Object(c.b)("wrapper",Object(r.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(c.b)("h2",{id:"type-components"},"Type Components"),Object(c.b)("p",null,"ec.admin comes with prepacked implementations of ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Fields.html"}),"Field"),", ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Inputs.html"}),"Input")," and ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/List.html#filtering-the-list"}),"Filter")," components that take care of each ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/data_manager/#field-data-types"}),"ec entry field type"),"."),Object(c.b)("h3",{id:"typefield"},Object(c.b)("a",Object(r.a)({parentName:"h3"},{href:"https://github.com/entrecode/ec.admin/blob/master/src/fields/TypeField.tsx"}),"TypeField")),Object(c.b)("p",null,"Entry specific ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Fields.html"}),"Field")," implementation. Renders the value of an entry field depending on its ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/data_manager/#field-data-types"}),"type"),". Used in EntryList and EntryShow."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<TypeField {...fieldProps('name', fieldConfig)} />\n")),Object(c.b)("h3",{id:"typeinput"},Object(c.b)("a",Object(r.a)({parentName:"h3"},{href:"https://github.com/entrecode/ec.admin/blob/master/src/inputs/TypeInput.tsx"}),"TypeInput")),Object(c.b)("p",null,"Entry specific ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Inputs.html"}),"Input")," implementation. Renders the form input of an entry field depending on its ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/data_manager/#field-data-types"}),"type"),". Used in EntryCreate, EntryEdit."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<TypeInput {...inputProps('name', fieldConfig)} />\n")),Object(c.b)("h3",{id:"typefilter"},Object(c.b)("a",Object(r.a)({parentName:"h3"},{href:"https://github.com/entrecode/ec.admin/blob/master/src/filters/TypeFilter.tsx"}),"TypeFilter")),Object(c.b)("p",null,"Entry specific ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://marmelab.com/react-admin/Inputs.html"}),"Input")," Implementation. Renders the filter input of an entry field depending on its ",Object(c.b)("a",Object(r.a)({parentName:"p"},{href:"https://doc.entrecode.de/data_manager/#field-data-types"}),"type"),". Used in EntryListFilter."),Object(c.b)("pre",null,Object(c.b)("code",Object(r.a)({parentName:"pre"},{className:"language-jsx"}),"<TypeFilter {...inputProps('name', fieldConfig)} />\n")))}d.isMDXComponent=!0}}]);